name: Main CI

on:
  push:
    branches:
      - 'main'
      - 'release-**'
    tags:
      - '*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:

    - name: Set up Go 1.18
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2  

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  

    - name: Build
      run: make all

    - name: Test
      run: make test

    # Sets the steps output variables: TAG and TAG_LATEST for use by the docker meta step
    - name: DockerTags
      id: docker-tags
      run: |
        source ./hack/docker-tags.sh

    # Sets an output variable: TAGS with the constructed docker tags
    - name: DockerMeta
      id: docker-meta
      run: |
        if [ ${{ steps.docker-tags.outputs.TAG_LATEST == true }} ]
        then
          echo 'TAGS=ghcr.io/${{ github.repository }}:${{ env.TAG }},ghcr.io/${{ github.repository }}:latest' >> $GITHUB_OUTPUT
        else
          echo 'TAGS=ghcr.io/${{ github.repository }}:${{ env.TAG }}' >> $GITHUB_OUTPUT
        fi    

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}        

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.docker-meta.outputs.TAGS }}

    # Only try to publish the container image from the root repo; forks don't have permission to do so and will always get failures.
    - name: Publish container image
      if: github.repository == 'vmware-tanzu/velero-plugin-for-csi'
      run: |
        docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
        ./hack/docker-push.sh     
